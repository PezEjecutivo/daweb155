Comando Git
git init ==> Crea un repositorio de codigo local
git add <file> | . ==> Añade ese archivo al control de versiones (. añade todo los del directorio | * añade todos)
git commit -m <mensaje> ==> Subo un cambio con un mensaje
git status ==> Muestra el estado en el que esta el repositorio
git log ==> Muestra los commits realizados y su mensaje asociado (Persona, email, fecha)
git diff ==> Muestra las diferencias del archivo
git log --oneline ==> Lo muestra todo en la misma linea
git show <codigo commit> ==> Muestra mas detalles del commit
git push ==> Lo sube al repositorio remoto
git restore <file> | . ==> Restaura el archivo hasta el ultimo commit
git restore --staged <file> ==> Lo saca del stage
git revert <codigo de commit> ==> Vuelve a antes de ese commit, es decir, revierte el commit
git show <commit code> ==> Muestra los cambios del commit
gitk ==> Muestra un HUD de git
git branch <nombre> ==> Crea una rama 
git branch ==> Muestra todas las ramas locales
git branch -r ==> Muestra todas las ramas remotas
git branch -a ==> Muestra todas las ramas y en la que estas
git branch -d <nombre-rama> ==> Elimina la rama
git checkout <nombre-rama> ==> Cambiar a la rama <nombre-rama>
git merge <nombre-rama> ==> Une la rama, con la rama actual
git checkout -b <nombre-rama> ==> Crea la rama <nombre-rama> y nos mueve a ella
git remote add origin ==> Crea el repositorio online
git push origin/<repositorio> <rama> ==> Envia los cambios
git push origin/<repositorio> :<rama> ==> Borra la rama en el repositorio remoto
git commit -a -m "<mensaje>" ==> Hace el add y el commit
git tag -a <version> -m "<mensaje>" ==> Referencia el ultimo commit como un tag
git push origin --tags ==> Sube el tag al repositorio remoto
git fetch --tags ==> Descargas los tags al repositorio local


Configurar Git
git config --global user.name <nombre> ==> cambiamos el nombre name de todos el dispositivo
git config --global user.email <email> ==> cambiamos el email de todos el dispositivo
